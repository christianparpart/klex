# vim:syntax=klex
# Lexical Grammar for the Flow Language

# be case insensitive in pattern matching?
# %pragma ignorecase

# NUMBER            ::= 0|[1-9][0-9]*
# IDENT             ::= [a-zA-Z_][a-zA-Z_0-9]*
# IP4               ::= {IP4Oct}(\.{IP4Oct}){3}
# IP4Cidr           ::= {IP4}/{CidrMask}
# 
# %%

# symbols
Assign            ::= "="
OrAssign          ::= "|="
AndAssign         ::= "&="
PlusAssign        ::= "+="
MinusAssign       ::= "-="
MulAssign         ::= "*="
DivAssign         ::= "/="
Semicolon         ::= ";"
Question          ::= "?"
Colon             ::= ":"
And               ::= "and"
Or                ::= "or"
Xor               ::= "xor"
Equal             ::= "=="
UnEqual           ::= "!="

Less              ::= "<"
Greater           ::= ">"
LessOrEqual       ::= "<="
GreaterOrEqual    ::= ">="
PrefixMatch       ::= "=^"
SuffixMatch       ::= "=$"
RegexMatch        ::= "=~"
In                ::= "in"
HashRocket        ::= "=>"
Plus              ::= "+"
Minus             ::= "-"
Mul               ::= "/*"
Div               ::= "/"
Mod               ::= "%"
Shl               ::= "shl"
Shr               ::= "shr"
Comma             ::= ","
Pow               ::= "**"
Not               ::= "not"
BitNot            ::= "~"
BitOr             ::= "|"
BitAnd            ::= "&"
BitXor            ::= "^"
BrOpen            ::= "["
BrClose           ::= "]"
RndOpen           ::= "("
RndClose          ::= ")"
Begin             ::= "{"
End               ::= "}"

# keywords
Handler           ::= handler
If                ::= if
Then              ::= then
Else              ::= else
Unless            ::= unless
Match             ::= match
On                ::= on
While             ::= while
For               ::= for
Import            ::= import
From              ::= from
Var               ::= var

# data types
VoidType          ::= void
BoolType          ::= bool
NumberType        ::= int
StringType        ::= string

# misc
Ident             ::= [a-zA-Z_][a-zA-Z_0-9]*
RegExpGroup       ::= \$[0-9]+
Period            ::= "."
DblPeriod         ::= ".."
Ellipsis          ::= "..."
Comment(ignore)   ::= "#[^$]*"
Spacing(ignore)   ::= [\s\t\n]+
Eof               ::= <<EOF>>

# literals
TrueLiteral       ::= true
FalseLiteral      ::= false
StringLiteral     ::= \"[^"]*\"
NumberLiteral     ::= 0|[1-9][0-9]*
# IPv4Literal       ::= {IP4}
# IP6             ::= TODO
# IP4Cidr         ::= TODO
